#!/bin/bash
# This script:
# 1. Hits a series of URLs (SAMPLE: http://bhldnbeverlyhills.fullslate.com/services/1?start=2218&view=bare)
# 2. Greps the URLs' source for a series of patterns
# 3. Sends an email to a series of email addresses if the pattern is found
# By default the script stops running when it finds a match. This can be edited by changing repeat from 0 to 1
# NOTE: for email to send, mail command/SMTP must be configured -- see README
# NOTE: for the script to run repeatedly -- set up a cron (OR WRAP IN A LOOP)
# NOTE: for crons to work, file paths must be explciti "~/" & relative URLS won't likely work
# TODO: abstract file paths to vars; play with storing search terms, URLS and Emails in CSV for easy config, reduce Big O of all dem for loops
# 11/12 11/13 11/19 11/20
#

clear # clean things up a bit

# these are the URLs that will be tested against
urls=( "https://bhldnwalnutcreek.fullslate.com/services/1?start=3191&view=bare" "https://bhldnwalnutcreek.fullslate.com/services/1?start=3222&view=bare" )
# These are the terms that will be searched for
searchterms=( "/book?day=3219" "/book?day=3220" "/book?day=3233" "/book?day=3234" "/book?day=3240" "/book?day=3241" )
# These are the addresses that the email alerts are sent to
emails=( "" )
# flag file -- used to determine if the script ever ran successfully
flag="/home/appt-finder/tmp/flag.txt"
# var used to determine if this should repeatedly send emails despite the flag
repeat=0

if [ ! -f $flag ] || [ $repeat -eq 1 ];
  then

    for url in "${urls[@]}"
    do
        echo "Retrieving web data from:" $url
        # get ther URL content
        content="$(curl -s "$url")"

        # put content into text.txt file
        echo "$content"> /home/appt-finder/tmp/text.txt

        echo "Analyzing results..."

        for i in "${searchterms[@]}"
        do
            echo $i
            #search for the search term
            result=$(grep $i /home/appt-finder/tmp/text.txt)

            #check status of the grep command
            if [ $? -eq 0 ]
              then
                echo "Date found..."

                #create the found doc so the script won't repeat itself  
                echo "flagged"> $flag

                #create a file to hold the email message and create the message
                message="/home/appt-finder/tmp/message.txt"
                echo "Date found at " "$url" "$i" "book right away!"> $message

                for email in "${emails[@]}"
                do
                    #send the email
                    $(mail -s "BHLDN Date Found" $email< $message)
                done
                echo "Email(s) sent..."
              else
                echo 'No date found...'
            fi
        done
    done
  else
    echo "File found. Terminating..."
fi